# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help

name: shiny-deploy

on:
  push:
    branches:
      - develop
      - release*

jobs:
  shiny-deploy:
    runs-on: ubuntu-latest
 
    steps:
 
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          # The rsconnect R package needs cUrl.  This app needs the Java JDK (runtime AND compiler).
          sudo apt-get install -y libcurl4-openssl-dev default-jdk
 
      - uses: actions/checkout@v2
        
      - name: Install R packages
        run: |
          # The binary package distributions from R Studio dramatically speed up installation time
          options(repos = c(REPO_NAME = "https://packagemanager.rstudio.com/all/__linux__/focal/latest", 
             getOption("repos")))
          # This list of packages came from global.R.  Also we need rsconnect to deploy the app'
          install.packages(c("DT", "png", "rJava", "rcdk", "fingerprint", "enrichR", 
          "webchem", "plyr", "dplyr", "tidyr", "purrr", "tibble", "plotly", "shinyBS", "shinythemes", 
          "visNetwork", "igraph", "shinyjs", "shinycssloaders", "XML", "rsconnect", "renv", "conflicted"))
          # running this step as 'sudo' is necessary to be able to install packages in default library
        shell: sudo Rscript {0}

      - name: Deploy app
        run: |
          branch<-Sys.getenv("GITHUB_REF_NAME")
          repo<-Sys.getenv("GITHUB_REPOSITORY")
          appName<-strsplit(repo, "/")[[1]][2]
          if (!startsWith(branch, "release")) {
             appName = paste(appName, "staging", sep="-")
          }
          rsConnectUser <-"${{ secrets.RSCONNECT_USER }}"
          rsConnectToken <- "${{ secrets.RSCONNECT_TOKEN }}"
          rsConnectSecret <- "${{ secrets.RSCONNECT_SECRET }}" 
          rsconnect::setAccountInfo(rsConnectUser, rsConnectToken, rsConnectSecret)
          # omit archive/ folder from the collection to be deployed
          # (Tried using .rcsignore file but it did not work as documented.)
          appFiles<-dir()[which(dir()!="archive")]
          rsconnect::deployApp(appName = appName, appFiles=appFiles)
          # important NOT to run this step as sudo, otherwise env var's will be missing
        shell: Rscript {0}
